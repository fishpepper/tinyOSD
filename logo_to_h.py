#!/usr/bin/python
# read an ascii ppm generated by gimp
#
import sys

if len(sys.argv) < 2:
    print "usage: " + sys.argv[0] + " file.ppm\n\n"
    sys.exit(1)

fn = sys.argv[1]
fh = open(fn, "r")
out = open("src/logo.h", "w")

header    = fh.readline()
comment   = fh.readline()
dimension = fh.readline()
maxcol    = fh.readline()

width     = int(dimension.split()[0])
height    = int(dimension.split()[1])

x = 0
y = 0
byte_out = 0
byte_count = 0;
# width has to be a multiple of 8:
if not (width % 8 == 0):
    print("ERROR: image width has to be a multiple of 8!")
    sys.exit(1)


imagedata = [[], []] # white and black bits
i = 0

for line in fh:
    #print(hex(int(line)))
    # skip blue and green:
    fh.next()
    fh.next()

    red_val = int(line)
    if (red_val == 0):
        # black overlay
        imagedata[0].append(0)
        imagedata[1].append(1)
    elif (red_val == 255):
        # white overlay
        imagedata[0].append(1)
        imagedata[1].append(0)
    elif (red_val == 128):
        # transparent
        imagedata[0].append(0)
        imagedata[1].append(0)
    else:
        # "gray" overlay
        imagedata[0].append(1)
        imagedata[1].append(1)

    # next bit    
    i = i + 1

image_bytes = [[], []] # white and black bytes
byte = 0
byte_count = 0

for col in range(2):
    for bit in imagedata[col]:
        byte = byte << 1
        if (bit != 0):
            byte = byte | 0x01

        if (byte_count == 8):
            # byte finished!
            image_bytes[col].append(byte)
            byte_count = 0
            byte = 0
                
        byte_count = byte_count + 1


out.write("#ifndef LOGO_H__\n")
out.write("#define LOGO_H__\n")
out.write("#include <stdint.h>\n")
out.write("\n")
out.write("#define LOGO_WIDTH " + str(width) + "\n")
out.write("#define LOGO_HEIGHT " + str(height) + "\n")
out.write("\n")


out.write("static const uint8_t logo_data[2][LOGO_HEIGHT * (LOGO_WIDTH/8)] = {\n")
out.write("    {\n        ");
count = 0
for x in image_bytes[0]:
    out.write(hex(x) + ", ") 
    if ((count % 16) == 15):
        out.write("\n        ")
    count = count + 1

out.write("\n    }, \n")
out.write("    {\n        ");
count = 0
for x in image_bytes[1]:
    out.write(hex(x) + ", ")           
    if ((count % 16) == 15):
        out.write("\n    ")
    count = count + 1

out.write("\n    }\n};")



out.write("\n#endif  // LOGO_H__\n")
fh.close()
out.close()
